local Fluent = loadstring(game:HttpGet("https://raw.githubusercontent.com/Knuxy92/Ui-linoria/main/Fluent/Fluent.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()


local Window = Fluent:CreateWindow({
    Title = "InW Hub OPA" .. Fluent.Version,
    SubTitle = "      For OPL: Anarchy",
    TabWidth = 100,
    Size = UDim2.fromOffset(600, 350),
    Acrylic = true,
    Theme = "Normal Theme",
    MinimizeKey = Enum.KeyCode.LeftControl
})

-- Cache para configurações
local Cache = {
    DevConfig = {
        ListOfBox1 = {"Common Box"},
        ListOfBox2 = {"Uncommon Box"},
        ListOfDrink = {"Cider+", "Cider", "Lemonade+", "Lemonade", "Juice+", "Juice", "Smoothie+", "Smoothie"},
        ListOfSafeZone = {"SafeZone Sky", "SafeZone LightFarm"},
        ListOfBox3 = {"Rare Box", "Ultra Rare Box"},
        ListOfIsland = {"Grassy", "Kaizu", "Snow Mountains", "Pursuer Boss", "Bar", "Cliffs", "Windmill", "Cave", "Krizma", "Sam", "Green", "Trees", "Pyramid", "Package", "Snowy", "Mountain", "Marine Ford", "Sand Castle", "Forest", "Evil", "Crescent", "Islands", "Town", "Rocky", "Palm", "Sand", "Sand 2", "Small", "Tiny", "Super Tiny", "Grass", "Atlar"},
        ListOfMerchant = {"Rayleigh", "Better Drink", "Drink", "Flail", "QuestFish", "Krizma", "Sword", "Sniper", "Emote", "Affinity", "Fish", "Expertise"},
        ListOfAffinities = {"Devil Fruit ( Left )", "Devil Fruit ( Right )"}
    }
}



local Tabs = {
    PlayerTab = Window:AddTab({ Title = "Players", Icon = "users" }),
}

Fluent:Notify({
    Title = "InW Hub",
    Content = "Loading...",
    Duration = 5
})

local player = game.Players.LocalPlayer
local L1 = Instance.new("ScreenGui")
local L2 = Instance.new("TextButton")
local L3 = Instance.new("UICorner")
local L4 = Instance.new("ImageLabel")
local sound = Instance.new("Sound")
L3.Name = "UICorner"
L3.Parent = L2
L4.Name = "ButtonImage"
L4.Parent = L2
L4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
L4.BackgroundTransparency = 1.000
L4.BorderSizePixel = 0
L4.Position = UDim2.new(0.1, 0, 0.1, 0) 
L4.Size = UDim2.new(0, 45, 0, 45)
L4.Image = ""
L1.Name = "MainGui"
L1.Parent = player:WaitForChild("PlayerGui")
L1.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
L2.Name = "CustomButton"
L2.Parent = L1
L2.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
L2.BackgroundTransparency = 0.2
L2.BorderSizePixel = 0
L2.Position = UDim2.new(0.1208, 0, 0.0953, 0)
L2.Size = UDim2.new(0, 50, 0, 50)
L2.Font = Enum.Font.LuckiestGuy
L2.Text = "InW\nHub"
L2.TextColor3 = Color3.fromRGB(255, 255, 255)
L2.TextSize = 9.000
L2.Draggable = true
sound.Parent = L2
sound.SoundId = "rbxassetid://965305329"
L2.MouseButton1Click:Connect(function()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.LeftControl, false, game)
    sound:Play()
end)

local Section = Tabs.PlayerTab:AddSection("Player Utilities")

local function updatePlayerList()
    local players = {}
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Name ~= game.Players.LocalPlayer.Name then
            table.insert(players, player.Name)
        end
    end
    return players
end

local PlayerList = updatePlayerList()
local selectedPlayer = PlayerList[1] or ""

local Dropdown = Tabs.PlayerTab:AddDropdown("Dropdown", {
    Title = "Select Player",
    Description = "",
    Values = PlayerList,
    Multi = false,
    Default = selectedPlayer,
    Callback = function(Value)
        selectedPlayer = Value
        print("Dropdown changed. Selected player:", selectedPlayer)
    end
})

game.Players.PlayerAdded:Connect(function(player)
    table.insert(PlayerList, player.Name)
    Dropdown:Refresh(PlayerList, PlayerList[1] or "")
end)

game.Players.PlayerRemoving:Connect(function(player)
    for i, name in ipairs(PlayerList) do
        if name == player.Name then
            table.remove(PlayerList, i)
            break
        end
    end
    Dropdown:Refresh(PlayerList, PlayerList[1] or "")
end)

local Tpplr = false
local SpectatePlayer = false

Tabs.PlayerTab:AddToggle("Toggle", {
    Title = "TP Player",
    Description = "",
    Default = false,
    Callback = function(TP)
        Tpplr = TP
        if Tpplr then
            spawn(function()
                while Tpplr do
                    local localPlayer = game.Players.LocalPlayer
                    local targetPlayer = game.Players:FindFirstChild(selectedPlayer)

                    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        local targetHRP = targetPlayer.Character.HumanoidRootPart

                        local targetPosition = targetHRP.Position
                        local behindPosition = targetPosition - targetHRP.CFrame.LookVector * 5
                        local targetOrientation = targetHRP.CFrame - targetHRP.Position

                        localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(behindPosition) * targetOrientation.Rotation
                    else
                        print("Target player not found or invalid.")
                        break
                    end

                    wait(0.1)
                end
            end)
        end
    end,
})

local function spectate(targetPlayer)
    if targetPlayer and targetPlayer.Character then
        local humanoid = targetPlayer.Character:FindFirstChild("Humanoid")
        if humanoid then
            workspace.CurrentCamera.CameraSubject = humanoid
            print("Now spectating:", targetPlayer.Name)
        end
    end
end

Tabs.PlayerTab:AddToggle("SpectatePlayerToggle", {
    Title = "View Player",
    Description = "",
    Default = false,
    Callback = function(Value)
        SpectatePlayer = Value
        if not Value then
            workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
        end
    end
})

spawn(function()
    while task.wait(0.5) do
        if SpectatePlayer and selectedPlayer then
            local targetPlayer = game.Players:FindFirstChild(selectedPlayer)
            if targetPlayer then
                spectate(targetPlayer)
            end
        end
    end
end)

Tabs.PlayerTab:AddToggle("Toggle", {
    Title = "No Clip",
    Description = "You can walk through everthing!",
    Default = false,
    Callback = function(enabled)
        toggleNoclip(enabled)
    end
})
